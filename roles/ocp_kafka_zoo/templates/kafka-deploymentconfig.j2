---
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    component: kafka
    deployment: kafka-{{ item }}
    kafka-node: '{{ item }}'
    openshift.io/scc: privileged
  name: kafka-{{ item }}
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    component: kafka
    deployment: kafka-{{ item }}
    kafka-node: '{{ item }}'
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        component: kafka
        deployment: kafka-{{ item }}
        kafka-node: '{{ item }}'
      name: kafka-{{ item }}
    spec:
      containers:
        - command:
            - sh
            - '-c'
            - >-
              /var/lib/kafka/bin/kafka-server-start.sh
              /var/lib/kafka/config/server.properties --override
              broker.id=${BROKER_ID} --override zookeeper.connect=${ZOO_CONNECT}
              --override log.dir=${KAFKA_LOG_DIR}
          env:
            - name: BROKER_ID
              value: '{{ item }}'
            - name: ZOO_CONNECT
              value: '{{ kafka_zoo_connect }}'
            - name: KAFKA_LOG_DIR
              value: /var/lib/kafka/data
          image: '10.248.152.200:5000/kafka:1.1.0'
          imagePullPolicy: IfNotPresent
          name: kafka-{{ item }}
          ports:
            - containerPort: 9092
              name: kafka-broker
              protocol: TCP
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/kafka/config/server.properties
              name: kafka-cfg
              readOnly: true
              subPath: server.properties
            - mountPath: /var/lib/kafka/data
              name: kafka-data
      dnsPolicy: ClusterFirst
      hostname: kafka{{ item }}
      nodeSelector:
        kafka-node: '{{ item }}'
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 0
      serviceAccount: aggregated-kafka
      serviceAccountName: aggregated-kafka
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: kafka-cfg
          name: kafka-cfg
        - hostPath:
            path: /var/kafka-data
            type: ''
          name: kafka-data
  test: false
  triggers: []
...
